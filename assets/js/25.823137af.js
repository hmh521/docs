(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{381:function(a,t,s){a.exports=s.p+"assets/img/heap.1382fc00.png"},382:function(a,t,s){a.exports=s.p+"assets/img/compare.2bcbf175.png"},409:function(a,t,s){"use strict";s.r(t);var v=s(14),r=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"jvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[a._v("#")]),a._v(" JVM")]),a._v(" "),t("h2",{attrs:{id:"jvm是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm是什么"}},[a._v("#")]),a._v(" JVM是什么？")]),a._v(" "),t("p",[a._v("Java 虚拟机（Java Virtual Machine，JVM）是运行 Java 字节码的虚拟机。JVM 是 Java 运行环境的一部分，是 Java 的核心和关键所在。")]),a._v(" "),t("h2",{attrs:{id:"jvm由哪些部分组成-运行流程是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm由哪些部分组成-运行流程是什么"}},[a._v("#")]),a._v(" JVM由哪些部分组成？运行流程是什么？")]),a._v(" "),t("p",[a._v("JVM 主要由类加载器、运行时数据区、执行引擎、本地方法接口和本地方法库等组成\n1.java源文件编译成.class文件\n2.类加载器加载.class文件\n3.类加载器将.class文件加载到运行时数据区\n4.执行引擎执行.class文件\n5.本地方法接口调用本地方法库")]),a._v(" "),t("h2",{attrs:{id:"什么是程序计数器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是程序计数器"}},[a._v("#")]),a._v(" 什么是程序计数器？")]),a._v(" "),t("p",[a._v("程序计数器是一块较小的内存空间，是线程私有的，用来存储当前线程正在执行的字节码指令的地址。")]),a._v(" "),t("h2",{attrs:{id:"java堆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java堆"}},[a._v("#")]),a._v(" Java堆")]),a._v(" "),t("ol",[t("li",[a._v("线程共享区域：用来保存对象实例和数组，是垃圾回收器管理的主要区域")])]),a._v(" "),t("ul",[t("li",[a._v("年轻代和老年代")]),a._v(" "),t("li",[a._v("新生代：Eden区、Survivor区")]),a._v(" "),t("li",[a._v("老年代：存放长期存活的对象\n"),t("img",{attrs:{src:s(381),alt:"img.png"}})]),a._v(" "),t("li",[a._v("元空间保存的类信息、静态变量、常量、编译后的代码。")])]),a._v(" "),t("p",[t("img",{attrs:{src:s(382),alt:"img.png"}})]),a._v(" "),t("ul",[t("li",[a._v("1.7 有永久代，1.8 有元空间")])]),a._v(" "),t("h2",{attrs:{id:"什么是栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是栈"}},[a._v("#")]),a._v(" 什么是栈？")]),a._v(" "),t("ol",[t("li",[a._v("每个线程运行时所需的内存，称为虚拟机栈，栈中存放的是栈帧，对应方法的调用和执行。")]),a._v(" "),t("li",[a._v("每个线程只能有一个活动栈帧，对应当前正在执行的方法。")])]),a._v(" "),t("h3",{attrs:{id:"垃圾回收是否涉及栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收是否涉及栈"}},[a._v("#")]),a._v(" 垃圾回收是否涉及栈？")]),a._v(" "),t("p",[a._v("不涉及，栈中存放的是基本数据类型和对象的引用，对象的实例是存放在堆中的。")]),a._v(" "),t("h3",{attrs:{id:"栈内存分配越大越好吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈内存分配越大越好吗"}},[a._v("#")]),a._v(" 栈内存分配越大越好吗？")]),a._v(" "),t("p",[a._v("默认的栈内存通常为1024k，如果栈内存分配过大，会导致内存浪费，如果栈内存分配过小，会导致栈溢出。")])])}),[],!1,null,null,null);t.default=r.exports}}]);
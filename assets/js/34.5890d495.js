(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{412:function(s,a,t){"use strict";t.r(a);var e=t(14),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git常见问题"}},[s._v("#")]),s._v(" git常见问题")]),s._v(" "),a("h2",{attrs:{id:"github-推送代码报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-推送代码报错"}},[s._v("#")]),s._v(" github 推送代码报错")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Failed to connect to github.com port "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v(" after 21102ms: Timed out\n")])])]),a("p",[s._v("解决办法：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ipconfig/flushdns // 刷新DNS解析\n")])])]),a("h2",{attrs:{id:"gitgnore-文件不生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitgnore-文件不生效"}},[s._v("#")]),s._v(" .gitgnore 文件不生效")]),s._v(" "),a("p",[s._v("解决办法：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cached")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("h2",{attrs:{id:"本地ssh到github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地ssh到github"}},[s._v("#")]),s._v(" 本地ssh到github")]),s._v(" "),a("p",[s._v("问题：本地ssh到github，报错：Permission denied (publickey).")]),s._v(" "),a("ul",[a("li",[s._v("permission denied (publickey) 没有权限的publickey ，出现这错误一般是以下两种原因")])]),s._v(" "),a("ol",[a("li",[s._v("客户端与服务端未生成 ssh key")]),s._v(" "),a("li",[s._v("客户端与服务端的ssh key不匹配")])]),s._v(" "),a("p",[s._v("解决办法：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ~/.ssh/ \nsh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v(" // 生成ssh key\n")])])]),a("h2",{attrs:{id:"gitee-有readme文件-我推送的报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitee-有readme文件-我推送的报错"}},[s._v("#")]),s._v(" gitee 有readme文件，我推送的报错")]),s._v(" "),a("p",[s._v("问题：gitee 有readme文件，我推送的报错")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rejected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("        master -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" master "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fetch first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nerror: failed to push some refs to "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://gitee.com/xxx/xxx.git'")]),s._v("\n")])])]),a("p",[s._v("解决办法：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--rebase")]),s._v(" origin master\n")])])]),a("h2",{attrs:{id:"spring实体类字段后端前端大小写不一致解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring实体类字段后端前端大小写不一致解决"}},[s._v("#")]),s._v(" spring实体类字段后端前端大小写不一致解决")]),s._v(" "),a("ul",[a("li",[s._v("首先描述我的问题，我的问题是在开发的过程当中，我在实体类中有一个字段：xCoor。 但是我用前端去调用后端接口，返回的是xcoor，变成了小写。 （我猜测可能是因为英文拼写的原因？因为当时还有许多其他的字段都没有出现大小写自动转化的问题，只有这个字段给了警告，说是拼写有问题。最终原因是json返回的时候把第二个字母变小写了，也就是Spring Boot中Jackson的功劳\n解决办法：")])]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@JsonProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xCoor"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" xCoor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);